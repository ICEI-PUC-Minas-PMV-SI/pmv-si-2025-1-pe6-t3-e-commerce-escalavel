// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  nome       String
  cel        String
  senha      String
  perfil     String      @default("user") // (admin ou user)
  carrinho   Carrinho[]
  pedidos    Pedido[] // Relação com os pedidos
  avaliacoes Avaliacao[] // Relação com avaliações feitas pelo usuário
}

enum CategoriaProduto {
  PROCESSADORES
  PLACAS_VIDEO
  MEMORIAS_RAM
  ARMAZENAMENTO
  PLACAS_MAE
}

model Product {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  nome       String
  descricao  String
  preco      Float
  categoria  CategoriaProduto
  estoque    Int
  imagem     String?
  createdAt  DateTime         @default(now())
  carrinho   Carrinho[]
  avaliacoes Avaliacao[]
  ItemPedido ItemPedido[]
}

model Carrinho {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId  String   @db.ObjectId
  produtoId  String   @db.ObjectId
  quantidade Int
  createdAt  DateTime @default(now())
  usuario    User     @relation(fields: [usuarioId], references: [id])
  produto    Product  @relation(fields: [produtoId], references: [id])
  Pedido     Pedido[]
}

model Pedido {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId       String    @db.ObjectId
  total           Float
  status          String    @default("aprovado") // Valor padrão aqui
  createdAt       DateTime  @default(now())
  dataPagamento   DateTime?
  paymentIntentId String?

  usuario    User         @relation(fields: [usuarioId], references: [id])
  itens      ItemPedido[] // <- relação 1:n com os itens
  Carrinho   Carrinho?    @relation(fields: [carrinhoId], references: [id])
  carrinhoId String?      @db.ObjectId
}

model ItemPedido {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  pedidoId      String @db.ObjectId
  produtoId     String @db.ObjectId
  quantidade    Int
  precoUnitario Float

  pedido  Pedido  @relation(fields: [pedidoId], references: [id])
  produto Product @relation(fields: [produtoId], references: [id])
}

model Avaliacao {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId  String   @db.ObjectId
  produtoId  String   @db.ObjectId
  nota       Int
  comentario String
  createdAt  DateTime @default(now())

  usuario User    @relation(fields: [usuarioId], references: [id])
  produto Product @relation(fields: [produtoId], references: [id])
}

///npx prisma generate
