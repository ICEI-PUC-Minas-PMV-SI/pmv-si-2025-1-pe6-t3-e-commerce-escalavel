// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  email     String      @unique
  nome      String
  cel       String
  senha     String
  perfil    String      @default("user") // (admin ou user)
  carrinho  Carrinho[]
  pedidos  Pedido[] // Relação com os pedidos
  avaliacoes Avaliacao[] // Relação com avaliações feitas pelo usuário
}

model Product {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  nome       String
  descricao  String
  preco      Float
  categoria  String
  estoque    Int
  createdAt  DateTime    @default(now())
  carrinho   Carrinho[]
  avaliacoes Avaliacao[] // Relação com avaliações do produto
}

model Carrinho {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId  String   @db.ObjectId
  produtoId  String   @db.ObjectId
  quantidade Int
  createdAt  DateTime @default(now())
  usuario    User     @relation(fields: [usuarioId], references: [id])
  produto    Product  @relation(fields: [produtoId], references: [id])
  Pedido     Pedido[]
}

model Pedido {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId  String   @db.ObjectId // ID do usuário
  carrinhoId String   @db.ObjectId // ID do carrinho
  total      Float // Valor total do pedido
  status     String // Status do pedido (ex: "pendente", "pago", "cancelado")
  createdAt  DateTime @default(now()) // Data de criação
  usuario    User     @relation(fields: [usuarioId], references: [id]) // Relação com o usuário
  carrinho   Carrinho @relation(fields: [carrinhoId], references: [id]) // Relação com o carrinho
}

model Avaliacao {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId  String   @db.ObjectId
  produtoId  String   @db.ObjectId
  nota       Int
  comentario String
  createdAt  DateTime @default(now())

  usuario    User     @relation(fields: [usuarioId], references: [id])
  produto    Product  @relation(fields: [produtoId], references: [id])
}
///npx prisma generate
